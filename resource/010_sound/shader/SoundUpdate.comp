#version 450
#extension GL_GOOGLE_cpp_style_line_directive : require

#define USE_SOUND_SYSTEM 0
#include <SoundSystem.glsl>

layout (local_size_x = SOUND_REQUEST_SIZE, local_size_y = 1, local_size_z = 1) in;


shared uint s_active_counter;
shared uint s_free_counter;

void main()
{
	uint local = gl_LocalInvocationID.x;
	if(local == 0)
	{
		s_active_counter = 0;
		s_free_counter = 0;
	}
	barrier();
	memoryBarrierShared();

	if(b_sound_playing_data[local].m_is_playing != 0)
	{
		uint next = b_sound_playing_data[local].m_current += u_play_info.m_sound_deltatime;
		if(next >= b_sound_playing_data[local].m_time)
		{
//			b_sound_playing_data[local].m_time = 0;
//			uint index = atomicAdd(s_active_counter, 1);
//			b_active_id_buffer[index] = local;

			// 再生終了
			b_sound_playing_data[local].m_is_playing = 0;
		}
		else
		{
			uint index = atomicAdd(s_active_counter, 1);
			b_active_id_buffer[index] = local;
		}
	}

	if(b_sound_playing_data[local].m_is_playing == 0)
	{
		uint index = atomicAdd(s_free_counter, 1);
		b_free_id_buffer[index] = local;
	}

	barrier();
	memoryBarrierShared();

	if(local == 0)
	{
		b_active_id_counter = s_active_counter;
		b_free_id_counter = s_free_counter;
	}

}