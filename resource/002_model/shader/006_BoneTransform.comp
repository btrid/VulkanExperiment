#version 450

#pragma optionNV (unroll all)
#pragma optionNV (inline all)


//#extension GL_ARB_shading_language_include : require
#extension GL_GOOGLE_cpp_style_line_directive : require
#include </MultiModel.glsl>

layout (local_size_x = 1024, local_size_y = 1) in;


layout(std140, binding=0) uniform ModelInfoUniform {
	ModelInfo modelInfo;
};

layout(std430, binding=8) readonly restrict buffer NodeGlobalTransformBuffer {
//	NodeGlobalTransform nodeGlobalTransforms[];
//	mat3x4 nodeGlobalTransforms[];
	mat4 nodeGlobalTransforms[];
};

layout(std430, binding=9) readonly restrict buffer BoneInfoBuffer {
	BoneInfo boneInfo[];
};

layout(std430, binding=10) readonly restrict buffer BoneMapBuffer {
	uint boneMap[];
};

layout(std430, binding=11) restrict buffer BoneTransformBuffer {
	mat4 bones[];
};

void main()
{
	if(gl_GlobalInvocationID.x >= modelInfo.boneNum * modelInfo.instanceNum){ return; }
	mat4 inv = modelInfo.invGlobalMatrix;
	uint index = gl_GlobalInvocationID.x;

	uint boneInfoIndex = index % modelInfo.boneNum;
	uint nodeIndexOffset = boneMap[index / modelInfo.boneNum] * modelInfo.nodeNum;
	bones[index] 
		= inv
		* nodeGlobalTransforms[nodeIndexOffset + boneInfo[boneInfoIndex].nodeIndex]
		* boneInfo[boneInfoIndex].boneOffset;

}