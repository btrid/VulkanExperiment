#version 460

#extension GL_GOOGLE_include_directive : require

#define USE_DC 0
#include "DualContouring.glsl"

layout (local_size_x = 64) in;

void main() 
{
	vec3 axis[] = {vec3(1., 0., 0.),vec3(0., 1., 0.),vec3(0., 0., 1.)};
	vec3 extent = vec3(500.);
	vec3 voxel_size = extent / Voxel_Reso;

	vec3 f = axis[gl_GlobalInvocationID.z];
	vec3 s = axis[(gl_GlobalInvocationID.z+1)%3]; 
	vec3 u = axis[(gl_GlobalInvocationID.z+2)%3]; 
	
	int index = int(gl_GlobalInvocationID.x + gl_GlobalInvocationID.y*Voxel_Reso.x + gl_GlobalInvocationID.z*Voxel_Reso.x*Voxel_Reso.y);
	for(index = b_ldc_point_link_head[index]; index>=0;)
	{
		LDCPoint point = b_ldc_point[index];
		index = point.next;

		float voxel_p = (point.p*Voxel_Reso)[gl_GlobalInvocationID.z];

		uvec3 voxel_index = min(uvec3(s*gl_GlobalInvocationID.x + u*gl_GlobalInvocationID.y + f*voxel_p), Voxel_Reso-1);
		uint i = voxel_index.x + voxel_index.y*Voxel_Reso.x + voxel_index.z*Voxel_Reso.x*Voxel_Reso.y;
		atomicOr(b_dc_cell[i].axis_dist, (1u<<gl_GlobalInvocationID.z)| (uint(fract(voxel_p)*255.)<<(8+gl_GlobalInvocationID.z*8)));
		b_dc_cell[i].normal[gl_GlobalInvocationID.z] = point.normal;

	}


}