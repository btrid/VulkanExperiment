#version 460
#extension GL_GOOGLE_include_directive : require

#include "btrlib/Math.glsl"

#define USE_AppModel 0
#define USE_AppModel_Update 1
#include "applib/AppModel.glsl"


layout (local_size_x = 1024, local_size_y = 1) in;


void main() 
{
	uint node_global_index = gl_GlobalInvocationID.x;
	ModelInfo model_info = u_model_info;
	if(node_global_index >= model_info.nodeNum * b_model_instancing_info.instanceAliveNum){ return; }

	uint model_index = node_global_index / model_info.nodeNum;

	PlayingAnimation pa = b_playing_animation[model_index];
	AnimationInfo aInfo = b_animation_info[pa.playingAnimationNo];

	uint node_index = node_global_index % model_info.nodeNum;
	mat4 local = mat4(1.);
	vec4 xyz = texture(t_motion_texture[0], vec2(pa.time / aInfo.maxTime, node_index*3));
	vec4 rot = texture(t_motion_texture[0], vec2(pa.time / aInfo.maxTime, node_index*3+1));
	vec4 scale = texture(t_motion_texture[0], vec2(pa.time / aInfo.maxTime, node_index*3+2));
	local = scaling(local, scale.xyz) * translate(mat4(1.), xyz.xyz) * mat4(quatToMat3(rot));
	b_node_transform[node_global_index] = local;

}

