#version 450

#extension GL_GOOGLE_cpp_style_line_directive : require
#include <btrlib/Math.glsl>

#define USE_APPMODEL 0
#include <applib/model/MultiModel.glsl>

layout (local_size_x = 1024, local_size_y = 1) in;


void main() 
{
	uint index = gl_GlobalInvocationID.x;
	ModelInfo model_info = b_model_info;
	if(index >= model_info.nodeNum * b_model_instancing_info.instanceAliveNum){ return; }

	uint modelIndex = index / model_info.nodeNum;
	AnimationWork anime_work = b_animation_work[modelIndex];
	AnimationInfo anime_info = b_animation_info[anime_work.playingAnimationNo];
	uint nodeIndex = index % model_info.nodeNum;

	mat4 local = mat4(1.);
	vec4 xyz = texture(tMotionData, vec2(anime_work.time / anime_info.maxTime, nodeIndex*3));
	vec4 rot = texture(tMotionData, vec2(anime_work.time / anime_info.maxTime, nodeIndex*3+1));
	vec4 scale = texture(tMotionData, vec2(anime_work.time / anime_info.maxTime, nodeIndex*3+2));
	local = scaling(local, scale.xyz) * translate(mat4(1.), xyz.xyz) * mat4(quatToMat3(rot));
	b_node_transforms[index] = local;

}

