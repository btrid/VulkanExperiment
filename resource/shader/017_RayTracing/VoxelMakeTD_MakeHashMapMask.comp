#version 460

#extension GL_GOOGLE_include_directive : require
#define USE_Voxel 0
#include "Voxel.glsl"

layout (local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

shared uvec2 s_mask;
void main() 
{
	if(gl_LocalInvocationIndex==0)
	{
		s_mask = uvec2(0);
	}
	barrier();

	uvec3 reso = u_info.reso.xyz>>4;
	uint hash_index = gl_GlobalInvocationID.x + gl_GlobalInvocationID.y * reso.x + gl_GlobalInvocationID.z * reso.x * reso.y;
	int hash = b_hashmap[hash_index];
	if(hash >= 0)
	{
		atomicOr(s_mask[gl_LocalInvocationIndex/32], 1<<(gl_LocalInvocationIndex%32));
	}

	barrier();
	if(gl_LocalInvocationIndex==0)
	{
		b_hashmap_mask[gl_WorkGroupID.x+ gl_WorkGroupID.y*gl_NumWorkGroups.x + gl_WorkGroupID.z*gl_NumWorkGroups.x*gl_NumWorkGroups.y] = s_mask;
	}

}
