#version 460

#extension GL_GOOGLE_include_directive : require
#define USE_Voxel 0
#include "Voxel.glsl"

layout (local_size_x = 4, local_size_y = 8, local_size_z = 4) in;

shared uvec4 s_map;
void main() 
{
	if(gl_LocalInvocationIndex==0)
	{
		s_map = uvec4(0);
	}
	memoryBarrierShared();
	barrier();

	uvec3 reso = gl_NumWorkGroups * gl_WorkGroupSize;
	uvec3 p = gl_GlobalInvocationID.xyz;
	uint i = p.x + p.y*reso.x + p.z*reso.x*reso.y;
	if(b_map_index[i]>=0)
	{
		uint index = gl_LocalInvocationID.x+ gl_LocalInvocationID.y*gl_WorkGroupSize.x+gl_LocalInvocationID.z*gl_WorkGroupSize.x*gl_WorkGroupSize.y;
		atomicOr(s_map[index/32], 1<<(index%32));
	}

	memoryBarrierShared();
	barrier();

	if(gl_LocalInvocationIndex==0)
	{
		uint index = gl_WorkGroupID.x + gl_WorkGroupID.y*gl_NumWorkGroups.x + gl_WorkGroupID.z*gl_NumWorkGroups.x*gl_NumWorkGroups.y;
		b_top[index] = s_map;
	}
}
