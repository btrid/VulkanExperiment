#version 460

#extension GL_GOOGLE_include_directive : require
#define USE_Flowmap 0
#include "Flowmap.glsl"

#define USE_RenderTarget 1
#include "applib/System.glsl"

layout (local_size_x=8, local_size_y=8) in;

vec2 FlowMap(vec3 p)
{
	float amplification = 1.2;
	p *= 0.03;
	vec2 v = vec2(0.);
	vec2 c = vec2(0.);
	for(int i = 0; i < 4; i++)
	{
		v = v*amplification + vec2(noise(p), noise(p+100.));
		c = c*amplification + 1.;
		p*=1.53;
	}
	return (v / c) * 2. - 1.;
}

void main() 
{
	ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
	int i = uv.x + uv.y*u_info.reso.x;

	float p = b_value[i];

	vec2 flow = FlowMap(vec3(gl_GlobalInvocationID.xy, 0.0));
//	ivec2 target = ivec2(gl_GlobalInvocationID.xy + flow*clamp(10.-p, 0., 10.));
	ivec2 target = ivec2(gl_GlobalInvocationID.xy + flow*30.);
//	int ti = target.x + target.y*u_info.reso.x;
//	float v = b_value[ti];
	
	vec3 color1 = vec3(1.0, 0.5, 0.5);
	vec3 color2 = vec3(0.5, 0.5, 1.0);
	vec3 color = mix(color1, color2, step(p, 0.));

	imageStore(i_render_target, ivec2(gl_GlobalInvocationID.xy), vec4(color, 1.));
}
