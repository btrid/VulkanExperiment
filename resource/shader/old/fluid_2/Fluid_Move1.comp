#version 460
#extension GL_GOOGLE_include_directive : require

#include "btrlib/ConvertDimension.glsl"
#include "btrlib/Shape.glsl"

#define USE_Fluid2D 0
#define USE_GI2D 1
#include "GI2D.glsl"
#include "Fluid2D.glsl"

layout (local_size_x = 1024) in;

void main() 
{

	int p_id = int(gl_GlobalInvocationID.x);
	{ 
		vec2 acc = b_acc[p_id];
		b_acc[p_id] = vec2(0.);
		vec2 vel = b_vel[p_id] += (acc /*+ vec2(0., 9.8)*/) * DT;
		vec2 pos = b_pos[p_id] += vel * DT;
		
		vec2 index_f = pos*Scale / Grid_Size;
		ivec2 index = ivec2(index_f);
		ivec2 reso = ivec2(u_gi2d_info.m_resolution/Grid_Size);
		if(any(lessThan(index, ivec2(0))) || any(greaterThanEqual(index, reso))){ return; }
		int i = index.x + index.y*reso.x;

		int next = atomicExchange(b_grid_head[i], p_id);
		b_grid_node[p_id] = next;
	}
}

