#version 460
#extension GL_GOOGLE_include_directive : require

#define USE_Rigidbody2D 0
#define USE_GI2D 1
#include "GI2D.glsl"
#include "Rigidbody2D.glsl"


layout (local_size_x = RB_PARTICLE_BLOCK_SIZE) in;

void main() 
{
	uint pb_id = b_pb_update_list[b_world.cpu_index*b_manager.pb_list_size+gl_WorkGroupID.x];
	uint p_id = pb_id*RB_PARTICLE_BLOCK_SIZE + gl_LocalInvocationID.x;
	if(b_rbParticle[p_id].contact_index == -1){ return; }

	uint r_id = b_rbParticle_map[pb_id];
	vec2 pos = ((b_rigidbody[r_id].flag & RB_FLAG_FLUID) == 0) 
	 ? mat2(b_rigidbody[r_id].R) * b_rbParticle[p_id].relative_pos + b_rigidbody[r_id].cm
	 : b_rbParticle[p_id].pos;

	vec2 pos_old = b_rbParticle[p_id].pos_old;

	b_rbParticle[p_id].pos_old = pos;

	vec2 vel = (pos - pos_old) + RB_GRAVITY_DT;
//	vel = clamp(vel, -vec2(0.5), vec2(0.5));
	b_rbParticle[p_id].pos = pos + vel;
//	b_rbParticle[p_id].is_contact = 0;

	b_rbParticle[p_id].local_sdf = mat2(b_rigidbody[r_id].R) * b_rbParticle[p_id].sdf;

}

