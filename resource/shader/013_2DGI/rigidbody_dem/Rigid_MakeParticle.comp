#version 460
#extension GL_GOOGLE_include_directive : require

#define USE_Rigidbody2D 0
#define USE_GI2D 1
#include "GI2D.glsl"
#include "Rigidbody2D.glsl"


layout (local_size_x = RB_PARTICLE_BLOCK_SIZE) in;

shared Rigidbody s_rb;
void main() 
{
	uint p_id = gl_WorkGroupID.x*RB_PARTICLE_BLOCK_SIZE + gl_LocalInvocationID.x;
//	if(b_rbParticle[p_id].contact_index == -1){ return; }

	if(gl_LocalInvocationID.x == 0)
	{
		uint r_id = b_rbParticle_map[gl_WorkGroupID.x];
		s_rb = b_rigidbody[r_id];
	}

	barrier();
	memoryBarrierShared();

	vec2 local_pos = rotateRBParticle(b_rbParticle[p_id].relative_pos, s_rb.angle);
	vec2 pos = s_rb.pos + local_pos;

	b_rbParticle[p_id].pos = pos;
	b_rbParticle[p_id].pos_predict = pos;
	b_rbParticle[p_id].local_pos = local_pos;
	b_rbParticle[p_id].local_sdf = rotateRBParticle(b_rbParticle[p_id].sdf, s_rb.angle);

}

