#version 460
#extension GL_GOOGLE_include_directive : require

#define USE_Rigidbody2D 0
#define USE_GI2D 1
#define USE_MakeRigidbody 2
#include "GI2D.glsl"
#include "Rigidbody2D.glsl"

layout (local_size_x = 64) in;

layout(push_constant) uniform Input
{
	uint particle_block_num;
	int p;
	uvec2 reso;
} constant;

void main()
{
	rbParticle p = b_make_particle[gl_GlobalInvocationID.x];
	vec2 pos = p.local_pos;
	ivec2 posi = ivec2(pos);

	vec2 sdf = vec2(b_jfa_cell[posi.x + posi.y*constant.reso.x]-posi);
	sdf = (dot(sdf, sdf) >= 0.0001) ? normalize(sdf) : vec2(0., -1.);

	p.sdf = sdf;

	uint p_index  = ((b_manager.z+b_world.particle_block_max-gl_NumWorkGroups.x + gl_WorkGroupID.x) % b_world.particle_block_max) * 64 + gl_LocalInvocationIndex;
	b_rbParticle[p_index] = p;

}