#version 460
#extension GL_GOOGLE_include_directive : require

#define USE_Rigidbody2D 0
#define USE_GI2D 1
#include "GI2D.glsl"
#include "Rigidbody2D.glsl"


layout (local_size_x = RB_PARTICLE_BLOCK_SIZE) in;
void main() 
{
	uint p_id = gl_WorkGroupID.x*RB_PARTICLE_BLOCK_SIZE + gl_LocalInvocationID.x;
	if(b_rbParticle[p_id].contact_index == -1){ return; }

	vec2 pos = b_rbParticle[p_id].pos;
		
	ivec2 index = ivec2(pos);
	if(any(lessThan(index, ivec2(0))) || any(greaterThanEqual(index, u_gi2d_info.m_resolution.xy))){ return; }

	vec3 color = vec3(0., 0., 0.);
	if(b_rbParticle[p_id].contact_index != -1){ color = vec3(0., 0., 10.); }
	if(b_rbParticle[p_id].is_contact == 1){ color = vec3(1., 1.0, 0.); }
	if(b_rbParticle[p_id].is_contact == 2){ color = vec3(10., 0., 0.); }
	Fragment f;
	setEmissive(f, false);
	setDiffuse(f, true);
	setRGB(f, color);

	b_fragment[index.x+index.y*u_gi2d_info.m_resolution.x] = f;
}

