#version 460
#extension GL_GOOGLE_include_directive : require

#define USE_Rigidbody2D 0
#define USE_GI2D 1
#include "GI2D.glsl"
#include "Rigidbody2D.glsl"

layout (local_size_x=8, local_size_y=8) in;

void main() 
{
	uint64_t fragment_map = b_diffuse_map[getMemoryOrder(gl_WorkGroupID.xy)];
	uint64_t bit = 1ul<<(gl_LocalInvocationID.x+gl_LocalInvocationID.y*8);
	if((fragment_map & bit) == 0)
	{
		return;
	}
		
	rbCollidable c;
	c.r_id = -1;
	c.mass = 0.;
	c.pos = vec2(gl_GlobalInvocationID.xy) + vec2(0.5);
	c.sdf = vec2(0., -1.);
	c.vel = vec2(0.);

	uint i = gl_GlobalInvocationID.x+gl_GlobalInvocationID.y*u_gi2d_info.m_resolution.x;
	uint ii = atomicAdd(b_collidable_count[i], 1);
	b_collidable[i*COLLIDABLE_NUM + ii] = c;
}

