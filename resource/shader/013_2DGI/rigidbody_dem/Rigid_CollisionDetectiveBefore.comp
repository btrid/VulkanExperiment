#version 460
#extension GL_GOOGLE_include_directive : require

#define USE_Rigidbody2D 0
#define USE_GI2D 1
#include "GI2D.glsl"
#include "Rigidbody2D.glsl"

layout (local_size_x = 1024) in;

void main() 
{

	int p_id = int(gl_GlobalInvocationID.x);
	if(p_id >= b_rigidbody.pnum){ return; }

	vec2 local_pos = rotateRBParticle(b_relative_pos[p_id], b_rigidbody.angle);
	vec2 pos = b_rigidbody.pos + local_pos;

	vec2 vel = b_rigidbody.vel*DT;
	vec2 angular_vel = cross(vec3(local_pos, 0.), vec3(0., 0., b_rigidbody.angle_vel*DT)).xy;

	vec2 dir = vel + angular_vel;
	uint use = 1;
	for(int i = 0; i < b_rigidbody.pnum; i++)
	{
		if(i == p_id){ continue; }

		vec2 pos_b = b_rigidbody.pos + rotateRBParticle(b_relative_pos[i], b_rigidbody.angle);

		if(closestPointSegment(pos + normalize(dir)*2, dir, pos_b) < 0.5)
		{
			use = 0;
			break;
		}
	}
	b_rbParticle[p_id].use_collision_detective = use;

}