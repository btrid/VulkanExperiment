#version 460
#extension GL_GOOGLE_include_directive : require

#define USE_Rigidbody2D 0
#define USE_GI2D 1

#include "GI2D.glsl"
#include "Rigidbody2D.glsl"


layout (local_size_x = 1) in;

void main() 
{
	uint rbid = gl_GlobalInvocationID.x;
	if(rbid >= b_world.rigidbody_num){ return; }

	vec2 pos = b_rigidbody[rbid].pos;
	vec2 pos_predict = b_rigidbody[rbid].pos_predict;
	vec2 pos_old = b_rigidbody[rbid].pos_old;

	float angle = b_rigidbody[rbid].angle;
	float angle_predict = b_rigidbody[rbid].angle_predict;
	float angle_old = b_rigidbody[rbid].angle_old;

	vec2 vel = pos - pos_old;
	float a_vel = angle - angle_old;
//	vec2 vel = pos_predict - pos_old;
//	float a_vel = angle_predict - angle_old;
	vel += (pos_predict - pos) * RB_DT;
	a_vel +=  (angle_predict - angle) * RB_DT;

	b_rigidbody[rbid].pos_old = pos;
	b_rigidbody[rbid].angle_old = angle;

	pos += vel + RB_GRAVITY_DT;
	angle += a_vel;
	b_rigidbody[rbid].pos = pos;
	b_rigidbody[rbid].pos_predict = pos;
	b_rigidbody[rbid].angle = angle;
	b_rigidbody[rbid].angle_predict = angle;
}