#version 460
#extension GL_GOOGLE_include_directive : require

#define USE_Rigidbody2D 0
#define USE_GI2D 1

#include "GI2D.glsl"
#include "Rigidbody2D.glsl"


layout (local_size_x = 1) in;

void main() 
{
	uint rbid = gl_GlobalInvocationID.x;
	if(rbid >= b_world.rigidbody_num){ return; }
	ivec2 exclusion = b_rigidbody[rbid].exclusion;
	int exclusion_angle = b_rigidbody[rbid].exclusion_angle;

	if(all(equal(exclusion, ivec2(0))) && exclusion_angle == 0 ){
		return;
	}

	if(b_rigidbody[rbid].solver_count == 0)
	{
		return;
	}

//	vec2 ex = vec2(exclusion/2)/(32765.) * (vec2(notEqual(exclusion & ivec2(1), ivec2(0)))*2. - 1.);
	vec2 ex = vec2(exclusion)/65535.;
	b_rigidbody[rbid].pos += ex / float(b_rigidbody[rbid].solver_count);
//	float ex_a = float(exclusion_angle/2)/(65535.*127.) * (float((exclusion_angle & 1) != 0)*2. - 1.);
	float ex_a = float(exclusion_angle)/(65535.*255.);
	b_rigidbody[rbid].angle += ex_a / b_rigidbody[rbid].inertia/ float(b_rigidbody[rbid].solver_count);

	b_rigidbody[rbid].exclusion = ivec2(0);
	b_rigidbody[rbid].exclusion_angle = 0;
	b_rigidbody[rbid].is_exclusive = 1;
	b_rigidbody[rbid].solver_count = 0;

}