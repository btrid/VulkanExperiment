#version 460
#extension GL_GOOGLE_include_directive : require
#extension GL_EXT_shader_explicit_arithmetic_types : require
#extension GL_EXT_shader_atomic_int64 : require

#define USE_Rigidbody2D 0
#include "Rigidbody2D.glsl"

//#extension VK_EXT_conservative_rasterization : require


layout (local_size_x = 64) in;

layout(push_constant) uniform Input
{
	int distance;
	int p;
	uvec2 reso;
} constant;

void main() 
{
	VoronoiPolygon vv = b_voronoi_polygon[gl_GlobalInvocationID.x];
	int num = vv.num;
	if(num <= 1) { return;}
	i16vec2 vmin = i16vec2(99999);
	i16vec2 vmax = i16vec2(-99999);
	for(int i = 0; i < num; i++)
	{
		i16vec2 v = b_voronoi_vertex[int(vv.vertex_index[i])].point;
		vmin = min(vmin, v);
		vmax = max(vmax, v);
	}
	b_voronoi_polygon[gl_GlobalInvocationID.x].minmax = i16vec4(vmin, vmax+1);
}
