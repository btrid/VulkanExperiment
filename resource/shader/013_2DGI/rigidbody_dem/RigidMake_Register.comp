#version 460
#extension GL_GOOGLE_include_directive : require

#define USE_Rigidbody2D 0
#define USE_GI2D 1
#define USE_MakeRigidbody 2
#include "GI2D.glsl"
#include "Rigidbody2D.glsl"
layout (local_size_x = 256) in;

layout(push_constant) uniform Input
{
	uint particle_block_num;
	int p;
	uvec2 reso;
} constant;


shared uint s_rb_index;
shared uint s_pb_index;
void main() 
{
	if(gl_LocalInvocationIndex >= constant.particle_block_num) { return; }

	if(gl_LocalInvocationIndex == 0)
	{
		s_rb_index = b_manager.x;
		b_manager.x = (b_manager.x+1)%b_world.rigidbody_max;

		b_rigidbody[s_rb_index] = b_make_rigidbody;

		s_pb_index = b_manager.z;
		b_manager.z = (b_manager.z+constant.particle_block_num)%b_world.particle_block_max;

	}

	barrier();
	memoryBarrierShared();

	uint pb_index  = (s_pb_index + gl_LocalInvocationIndex) % b_world.particle_block_max;
	b_rbParticle_map[pb_index] = s_rb_index;
}
