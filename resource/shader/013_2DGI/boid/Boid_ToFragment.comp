#version 460
#extension GL_GOOGLE_include_directive : require

#define USE_Boid2D 0
#define USE_GI2D 1
#include "GI2D.glsl"
#include "Boid2D.glsl"

#define debug

#if !defined(debug)
layout (local_size_x = 1024) in;
#else
layout (local_size_x = 1) in;
#endif
void main() 
{

#if !defined(debug)
	int p_id = int(gl_GlobalInvocationID.x);
	vec2 pos = b_pos[p_id]*Scale;
		
	ivec2 index = ivec2(pos);
	if(any(lessThan(index, ivec2(0))) || any(greaterThanEqual(index, u_gi2d_info.m_resolution))){ return; }

	b_fragment[index.x+index.y*u_gi2d_info.m_resolution.x].albedo += vec4(float(p_id%3==0), float(p_id%3==1), float(p_id%3==2), 1.);
#else
	for(int p_id = 0; p_id < 1024; p_id++)
	{
		vec2 pos = b_pos[p_id]*Scale;
			
		ivec2 index = ivec2(pos);
		if(any(lessThan(index, ivec2(0))) || any(greaterThanEqual(index, u_gi2d_info.m_resolution))){ continue; }

		b_fragment[index.x+index.y*u_gi2d_info.m_resolution.x].albedo = vec4(float(p_id%3==0), float(p_id%3==1), float(p_id%3==2)*1.3, 1.) * 1.7;
		
	}
#endif
}

