#version 460
#extension GL_GOOGLE_include_directive : require

#define USE_AppModel 0
#define USE_AppModel_Update 1
#include "AppModel.glsl"


layout (local_size_x = 1024, local_size_y = 1) in;

void main()
{
	if(gl_GlobalInvocationID.x >= b_model_instancing_info.instanceAliveNum){ return; }
	uint srcIndex = gl_GlobalInvocationID.x;

	ModelInfo model_info = u_model_info;
	// カリングされるなら何もしない
/*	vec4 aabb = worlds[srcIndex] * vec4(model_info.AABB.xyz, 1.);
	aabb.w = model_info.AABB.w;
	Frustom f = uFrustom;
	if(isCulling(f, aabb)) 
	{ 
		return;
	} 
*/
	// instanceのincrement

	// @Todo メッシュ単位のカリング
	uint index = atomicAdd(b_model_instancing_info.instanceNum, 1);
	b_instance_map[index] = srcIndex;
	for(int i=0; i<model_info.mesh_num; i++) {
		atomicAdd(b_mesh[i].instanceCount, 1);
	}

}