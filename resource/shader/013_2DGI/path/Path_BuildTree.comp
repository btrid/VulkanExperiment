#version 460
#extension GL_GOOGLE_include_directive : require

#define USE_PathFinding 0
#include "Path.glsl"

#define USE_GI2D 1
#include "GI2D.glsl"


layout(push_constant) uniform Input
{
	uint hierarchy;
} constant;

layout (local_size_x=64) in;
void main()
{
	uint map_offset = getFragmentMapHierarchyOffset(constant.hierarchy);
	uint map_size = getFragmentMapHierarchyOffset(constant.hierarchy+1) - map_offset;

	if(gl_GlobalInvocationID.x >= map_size){ return; }

	SparseMap node;
	node.norton_index = gl_GlobalInvocationID.x;
	node.child_node_index = -1;
	node.map = b_diffuse_map[map_offset + node.norton_index];

	if(node.map == 0)
	{
		// 子は必要ない
	}
	else
	{
		uint child_index = atomicAdd(b_sparse_map_counter, 64);
		node.child_node_index = child_index;
		atomicAdd(b_sparse_map_hierarchy_counter[0].x, 1);
	}
	b_sparse_map[gl_GlobalInvocationID.x] = node;

}
