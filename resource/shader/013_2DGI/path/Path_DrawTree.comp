#version 460
#extension GL_GOOGLE_include_directive : require

#define USE_PathFinding 0
#include "Path.glsl"

#define USE_GI2D 1
#include "GI2D.glsl"

#define USE_RenderTarget 2
#include "applib/System.glsl"

layout (local_size_x=32, local_size_y=32) in;
void main()
{
	vec3 color = vec3(0.);
	uvec2 index = gl_GlobalInvocationID.xy >> (3*3);
	SparseMap map = b_sparse_map[0];
//	for(int i = 0; i < 3; i++)
	{
		if(map.child_node_index==-1)
		{
			color = vec3(1.);
//			break;
		}
//		map = b_sparse_map[map.child_node_index];
	}

	imageStore(i_render_target, ivec2(gl_GlobalInvocationID.xy), vec4(color, 1.));

}
