#version 450
#extension GL_GOOGLE_include_directive : require
#extension GL_KHR_shader_subgroup_ballot: enable
#extension GL_KHR_shader_subgroup_arithmetic: enable

#define USE_GI2D 0
#define USE_GI2D_Path 1
#include "GI2D/GI2D.glsl"
#include "GI2D/GI2DPath.glsl"

#include "GI2DPath.glsl"
layout (local_size_x = 64) in;

shared uint s_open_num;
void main() 
{	
	int offset = constant.age;
	if(gl_LocalInvocationIndex == 0) s_open_num = b_open_counter[offset].w;

	memoryBarrierShared();
	barrier();
	if(gl_GlobalInvocationID.x < s_open_num)
	{
		ivec2 pos = ivec2(b_open[offset*2048+gl_GlobalInvocationID.x]);
		int index = pos.x + pos.y * constant.reso.x;
		int data = int(b_path_data[index].data);
		int dir_type = (data>>0)&((1<<4)-1);
		int cost = (data>>4)&((1<<28)-1);

		if((dir_type%2)==0)
			explore(pos, dir_type, cost);
		if((dir_type%2)==1)
			explore(pos, dir_type, cost);
	}
}
