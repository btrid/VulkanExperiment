#version 450
#extension GL_GOOGLE_include_directive : require

#include "btrlib/ConvertDimension.glsl"
#include "btrlib/Common.glsl"
#include "btrlib/Math.glsl"

#define USE_PM 0
#include "PM.glsl"


layout (local_size_x = 1, local_size_y = 1) in;

layout(push_constant) uniform InputLight
{
	vec2 pos;
	float dir; // atan
	float angle;
	vec4 emission;
	int level;
} constant;

void main()
{
	int light_index = atomicAdd(b_emission_counter[0].x, 1);
	b_emission_buffer[light_index].emission += constant.emission;
	b_emission_buffer[light_index].pos = constant.pos;
	b_emission_buffer[light_index].dir = constant.dir;
	b_emission_buffer[light_index].angle = constant.angle;
	b_emission_buffer[light_index].level = constant.level;
}