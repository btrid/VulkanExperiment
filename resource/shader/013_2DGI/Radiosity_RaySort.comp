#version 450
#extension GL_GOOGLE_include_directive : require

#include "btrlib/ConvertDimension.glsl"
#include "btrlib/Common.glsl"
#include "btrlib/Math.glsl"

#define USE_GI2D 0
#define USE_GI2D_Radiosity 1
#include "GI2D.glsl"

#define Density (1)
layout (local_size_x = 1024) in;

layout(push_constant) uniform Input
{
	int compare_bit;
	int distance;
} constant;

bool compare(in D2Ray a, in D2Ray b){
	return length(a.dir) < length(b.dir);
}


void main() 
{
	// http://http.developer.nvidia.com/GPUGems2/gpugems2_chapter46.html
	// http://t-pot.com/program/90_BitonicSort/index.html
	// https://gist.github.com/mre/1392067
	uint index_a = gl_GlobalInvocationID.x;
	uint index_b = index_a^constant.distance;

	// 自分より上のものだけチェックする
	if (index_a<index_b)
	{
		return;
	}

	//データないよ
	if(index_a >= b_ray_counter.w ||index_b >= b_ray_counter.w)
	{
		return;
	}


	D2Ray a = b_ray[index_a];
	D2Ray b = b_ray[index_b];
	if (((index_a&constant.compare_bit)==0) == compare(a,b)) 
	{
		b_ray[index_a] = b;
		b_ray[index_b] = a;
	}
}
