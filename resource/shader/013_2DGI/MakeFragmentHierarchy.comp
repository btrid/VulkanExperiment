#version 450

#extension GL_GOOGLE_cpp_style_line_directive : require
#extension GL_ARB_gpu_shader_int64 : require

#include <btrlib/ConvertDimension.glsl>
#include <btrlib/Common.glsl>
#include <btrlib/Math.glsl>

#define USE_OIT 0
#include <OIT.glsl>

layout (local_size_x = 8, local_size_y = 8) in;

shared uint64_t s_bit;
void main()
{

	if(gl_LocalInvocationIndex == 0)
	{
		s_bit = 0;
	}
	barrier();
	memoryBarrierShared();

//	b_fragment_map[]
//	uvec3 index = uvec3(gl_WorkGroupID.xy, 1);
//	uint tiled_1D_index = gl_WorkGroupID.x+ gl_WorkGroupID.y*gl_NumWorkGroups.x; 

//	if(gl_LocalInvocationID.xy == 0)
//	{
//	}

	barrier();
	memoryBarrierShared();
}

