#version 450
#extension GL_GOOGLE_include_directive : require

#include "btrlib/ConvertDimension.glsl"
#include "btrlib/Common.glsl"
#include "btrlib/Math.glsl"


#define USE_Crowd2D 0
#include "Crowd.glsl"

layout (local_size_x = 1024) in;

layout(push_constant) uniform Input
{
	int compare_bit;
	int distance;
} constant;

bool compare(in CrowdRay a, in CrowdRay b){
	return a.march < b.march;
}


void main() 
{
	uint index_a = gl_GlobalInvocationID.x;
	uint index_b = index_a^constant.distance;

	// 自分より上のものだけチェックする
	if (index_a<index_b)
	{
		return;
	}


	// フレームを超えてはソートしない
	uint frame_a = index_a / u_crowd_info.ray_frame_max;
	uint frame_b = index_b / u_crowd_info.ray_frame_max;

	if(frame_a != frame_b)
	{
		return;
	}

	//データないよ
	uint num = u_crowd_info.ray_frame_max + b_ray_counter[frame_a].w;
	if(index_a >= num ||index_b >= num)
	{
		return;
	}


	CrowdRay a = b_ray[index_a];
	CrowdRay b = b_ray[index_b];
	bool sort_dir = (index_a&constant.compare_bit)==0;
	if ( (sort_dir == compare(a,b)))
	{
		b_ray[index_a] = b;
		b_ray[index_b] = a;
	}
}
