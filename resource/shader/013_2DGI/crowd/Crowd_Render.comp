#version 460
#extension GL_GOOGLE_include_directive : require

#define USE_Crowd2D 0
#include "GI2D/Crowd.glsl"
#define USE_GI2D 1
#include "GI2D/GI2D.glsl"
#define USE_GI2D_SDF 2
#include "GI2D/GI2DSDF.glsl"
#define USE_GI2D_Path 3
#include "GI2D/GI2DPath.glsl"
#define USE_RenderTarget 4
#include "applib/System.glsl"

layout (local_size_x = 64) in;

float remap(float original_value, float original_min, float original_max, float new_min, float new_max){ return (original_value - original_min) / (original_max - original_min) * (new_max - new_min) + new_min; }

void main()
{
    vec4 pos = b_unit_pos[gl_GlobalInvocationID.x];
//    pos.z = remap(pos.z, 0., 6.283, -3.1415, 3.1415);

    for(int y=-3; y<=3;y++)
    for(int x=-3; x<=3;x++)
    {
        vec4 color = vec4(1.);
        if(x!=0&&y!=0)
        {
            float r = atan(float(y), float(x)+0.01);

            if(abs(pos.z-r)<=(6.28/16.))
            {
                color = vec4(1., 0., 0., 1.);
            }
        }

    	imageStore(i_render_target, ivec2(pos.xy)+ivec2(x,y), color);

    }
}
