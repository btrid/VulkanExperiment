#version 460
#extension GL_GOOGLE_include_directive : require

#define USE_Crowd2D 0
#include "GI2D/Crowd.glsl"
#define USE_GI2D 1
#include "GI2D/GI2D.glsl"
#define USE_GI2D_SDF 2
#include "GI2D/GI2DSDF.glsl"
#define USE_GI2D_Path 3
#include "GI2D/GI2DPath.glsl"

layout (local_size_x = 64, local_size_y = 1) in;

void main()
{
	uint index = gl_GlobalInvocationID.x;
	if(index >= u_crowd_info.unit_data_max)
	{
		return;
	}

//	if(index >= b_unit_counter.w){
//		return;
//	}

	const ivec4 reso = u_gi2d_info.m_resolution;
	const int size = g_crowd_density_cell_size;
	ivec2 grid_reso = reso.xy/size;

	vec4 unit_pos = b_unit_pos[index];
	uvec2 ipos = uvec2(unit_pos.xy / g_crowd_density_cell_size);
	if(any(greaterThanEqual(ipos, grid_reso)))
	{
		return;
	}

	uint lindex = ipos.x + ipos.y * grid_reso.x;
	int head = atomicExchange(b_unit_link_head[lindex], int(index));
	b_unit_link_next[index] = head;
}
