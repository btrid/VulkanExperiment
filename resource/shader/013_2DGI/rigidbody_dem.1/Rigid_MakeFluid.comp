#version 460
#extension GL_GOOGLE_include_directive : require

#define USE_Rigidbody2D_World 0
#define USE_Rigidbody2D 1
#define USE_GI2D 2
#include "GI2D.glsl"
#include "Rigidbody2D.glsl"


layout (local_size_x = 1024) in;


vec2 calcTangent(in vec2 normal)
{
	vec3 vec = vec3(0.,0.,1.);
	return normalize(cross(vec3(normal, 0.),vec)).xy;
}

void main() 
{
	int p_id = int(gl_GlobalInvocationID.x);
	if(p_id >= b_rigidbody.pnum){ return; }
	if(b_rbParticle[p_id].contact_index == -1){ return; }

	vec2 pos = b_rbParticle[p_id].pos_predict;
		
	ivec2 index = ivec2(pos);
	if(any(lessThan(index, ivec2(0))) || any(greaterThanEqual(index, u_gi2d_info.m_resolution.xy))){ return; }

	rbFluid f;
	f.id = b_rigidbody.id;
	f.mass = b_rigidbody.mass;
	f.vel = b_rbParticle[p_id].vel;

	uint i = index.x+index.y*u_gi2d_info.m_resolution.x;
	uint ii = atomicAdd(b_fluid_count[i], 1);
	if(ii < FLUID_NUM)
	{
		b_fluid[i*FLUID_NUM + ii] = f;
	}
}

