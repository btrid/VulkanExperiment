#version 450
#extension GL_GOOGLE_include_directive : require

#include "btrlib/ConvertDimension.glsl"
#include "btrlib/Shape.glsl"

#define USE_PM 0
#define USE_PM_LIGHT 1
#include "PM.glsl"

layout (local_size_x = 1024, local_size_y = 1) in;

void main()
{
/*	ivec2 pos = ivec2(constant.pos);
	if(any(lessThan(pos, ivec2(0))) || any(greaterThanEqual(pos, ivec2(u_pm_info.m_resolution.xy))))
	{
		return;
	}
	int p_index = pos.x + u_pm_info.m_resolution.x*pos.y;

	{
		// list登録
		if(atomicCompSwap(b_emission_map[p_index], -1, 0) == -1)
		{
			int list_index = atomicAdd(b_emission_counter[0].x, 1);
			b_emission_list[list_index] = p_index;
		}
		b_emission[p_index].value += vec4(constant.emission, 0.);
	}
	*/
}