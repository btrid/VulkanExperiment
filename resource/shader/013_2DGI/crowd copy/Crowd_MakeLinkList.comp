#version 460
#extension GL_GOOGLE_include_directive : require

#include "btrlib/ConvertDimension.glsl"
#include "btrlib/Common.glsl"
#include "btrlib/Math.glsl"

#define USE_GI2D 2
#include "GI2D/GI2D.glsl"

#define USE_Crowd2D 0
#include "GI2D/Crowd.glsl"

#define USE_SYSTEM 1
#include "applib/System.glsl"


layout (local_size_x = 1024, local_size_y = 1) in;

void main()
{
	uint index = gl_GlobalInvocationID.x;
	if(index >= b_unit_counter.w){
		return;
	}

	const ivec4 reso = u_gi2d_info.m_resolution;
	const int size = g_crowd_density_cell_size;
	uvec2 data_offset = ivec2(1-u_system_data.m_gpu_index, u_system_data.m_gpu_index) * u_crowd_info.unit_data_max;

	UnitData unit = b_unit[data_offset.y + index];
	ivec2 ipos = ivec2(unit.m_pos) / g_crowd_density_cell_size;
	int lindex = ipos.x + ipos.y * (reso.x/size);
	int link_next = atomicExchange(b_unit_link_head[lindex], int(index));
	b_unit[data_offset.y + index].link_next = link_next;
}
