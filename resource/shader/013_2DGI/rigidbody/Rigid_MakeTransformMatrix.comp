#version 460
#extension GL_GOOGLE_include_directive : require
#extension GL_KHR_shader_subgroup_ballot: enable
#extension GL_KHR_shader_subgroup_arithmetic: enable

#define USE_Rigidbody2D 0
#define USE_GI2D 1
#include "GI2D/GI2D.glsl"
#include "GI2D/Rigidbody2D.glsl"


layout (local_size_x = RB_PARTICLE_BLOCK_SIZE) in;

void main() 
{
	uint pb_id = b_pb_update_list[b_world.cpu_index*b_manager.pb_list_size+gl_WorkGroupID.x];
	uint p_id = pb_id*RB_PARTICLE_BLOCK_SIZE + gl_LocalInvocationID.x;
	if((b_rbParticle[p_id].flag_color & RBP_FLAG_ACTIVE) == 0){ return; }

	uint r_id = b_rbParticle_map[pb_id];

	vec2 q = b_rbParticle[p_id].relative_pos.xy;
	vec2 p = b_rbParticle[p_id].pos - b_rigidbody[r_id].cm;
	vec4 pq = p.xxyy * q.xyxy;
	vec4 Apq = subgroupAdd(pq);
	if(subgroupElect()) 
	{
		atomicAdd(b_rigidbody[r_id].Apq_work.x, Apq.x);
		atomicAdd(b_rigidbody[r_id].Apq_work.y, Apq.y);
		atomicAdd(b_rigidbody[r_id].Apq_work.z, Apq.z);
		atomicAdd(b_rigidbody[r_id].Apq_work.w, Apq.w);
	}
}


