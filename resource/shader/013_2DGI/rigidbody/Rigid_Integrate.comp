#version 460
#extension GL_GOOGLE_include_directive : require

#define USE_Rigidbody2D 0
#define USE_GI2D 1
#include "GI2D.glsl"
#include "Rigidbody2D.glsl"

layout (local_size_x = 1) in;

void main() 
{
	if( b_constraint_count.w != 0)
	{
		vec2 vel = vec2(b_rigidbody.vel_work) / 65535.;
		float angle_vel = b_rigidbody.angle_vel_work / 65535.;

//		vel /= b_constraint_count.w;
//		angle_vel /= b_constraint_count.w;

		{
//			float force = abs(cross(vec3(b_rigidbody.size, 0.), vec3(vel, 0.)).z);
//			float rate = (force - abs(angle_vel)) / force;
//			vel *= min(rate + 0.05, 1.);
		}

//		b_rigidbody.vel_delta += vel;
//		b_rigidbody.angle_vel_delta += angle_vel;
		b_rigidbody.vel_delta = vel;
		b_rigidbody.angle_vel_delta = angle_vel;

		b_rigidbody.solver_count = 0;
	}

	{
		b_rigidbody.vel += b_rigidbody.vel_delta;
		b_rigidbody.angle_vel += b_rigidbody.angle_vel_delta;

		b_rigidbody.pos += b_rigidbody.vel*DT;
		b_rigidbody.vel += vec2(0., 9.8)*DT;

		b_rigidbody.angle += b_rigidbody.angle_vel*DT;
		b_rigidbody.angle_vel *= 0.98;

		b_rigidbody.vel_delta = vec2(0.);
		b_rigidbody.angle_vel_delta = 0.;

		b_rigidbody.pos_work = ivec2(0);
		b_rigidbody.vel_work = ivec2(0);
		b_rigidbody.angle_vel_work = 0;
	}
}