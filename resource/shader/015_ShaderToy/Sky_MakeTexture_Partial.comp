#version 460
#extension GL_GOOGLE_include_directive : require

#include "Sky.glsl"

layout (local_size_x = LSX, local_size_y = LSY, local_size_z = LSZ) in;
//layout (local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

layout(push_constant) uniform Input
{
	vec3 window;
} constant;


float rand(in vec3 co)
{
	return fract(sin(dot(co, vec3(12.98,78.23, 45.41))) * 43758.5);
}

// https://thebookofshaders.com/13/?lan=jp
// 非整数ブラウン運動
float fBM(in vec3 pos, in int octaves)
{
	float lacunarity = 2.;
	float total = 0.;
	float value = 0.;
	for(int i = 0; i < octaves; i++)
	{
		value = value*2. + rand(pos);
		total = total*2. + 1.;
		pos = pos * lacunarity;
	}

	return value / total;
}
void main()
{
	float v = fBM((vec3(gl_GlobalInvocationID.xyz)*0.1 + floor(constant.window)), 3);
	// 雲っぽく
	v *= smoothstep(0.6, 0.65, v);

	imageStore(i_map, ivec3(gl_GlobalInvocationID.xyz), uvec4(v*255.));

}