#version 460
#extension GL_GOOGLE_include_directive : require

#include "Sky.glsl"
layout (local_size_x = 32, local_size_y = 32) in;

void main()
{
	uvec3 reso = gl_NumWorkGroups * gl_WorkGroupSize;
//	vec2 ndc = ((vec2(gl_GlobalInvocationID.xy) + 0.5) / vec2(reso.xy));
//	vec4 s = texture(s_shadow_map, vec3(ndc.x, 1.-mod(constant.window.x, 1.), ndc.y));
//	imageStore(i_render_target, ivec2(gl_GlobalInvocationID.xy), vec4(s.xxx, 1.));

	float y = mod(constant.window.x*0.1, 1.);
	vec2 uv = vec2(gl_GlobalInvocationID.xy+0.5) / vec2(gl_NumWorkGroups.xy*gl_WorkGroupSize.xy);
//	vec2 ndc = vec2(gl_GlobalInvocationID.xy) / vec2(reso.xy);
//	float s = sin(ndc.x*6.28);
//	float c = cos(ndc.x*6.28);
//	vec3 dir = normalize(vec3(c, 0., s)) * ndc.y;
//	uv = mod(uv + constant.window.zx*0.2, 1.);

	vec4 v = texture(s_cloud_map, vec3(uv.x, y, uv.y));
//	vec4 v = texture(s_cloud_detail_map, vec3(uv.x, y, uv.y));
//	vec4 v = texture(s_weather_map, uv);
//	atan2(uv.y, uv.x);
//	vec4 v = texture(s_shadow_map, vec3(dir.x, y, dir.z)); 
//	vec4 v = texture(s_shadow_map, vec3(uv.x, y, uv.y)); 
	imageStore(i_render_target, ivec2(gl_GlobalInvocationID.xy), vec4(v.xxx, 1.));
//	if((uv.x <= 0.001 || uv.y <= 0.001) && (uv.x < 0.5))
//	imageStore(i_render_target, ivec2(gl_GlobalInvocationID.xy), vec4(1, 0,0,1.));


}