#version 460
#extension GL_GOOGLE_include_directive : require
#include "Sky.glsl"

layout (local_size_x = 64) in;
//shared f16vec4 s_rand[1024][3];


layout(push_constant) uniform Input
{
	vec3 window;
} constant;

vec4 rand4(in vec3 co)
{
	return vec4(
		fract(sin(dot(co, vec3(12.98,78.23, 45.41))) * 43758.5),
		fract(sin(dot(co+vec3(1.,0.,0.), vec3(12.98,78.23, 45.41))) * 43758.5),
		fract(sin(dot(co+vec3(2.,0.,0.), vec3(12.98,78.23, 45.41))) * 43758.5),
		fract(sin(dot(co+vec3(3.,0.,0.), vec3(12.98,78.23, 45.41))) * 43758.5)
	);
}

void main()
{
	vec3 p = vec3(gl_GlobalInvocationID.xyz) + floor(constant.window);
	uvec4 v;
	for(int i = 0; i < 4; i++)
	{
		uvec4 seed = uvec4(vec4(255.)*rand4(p*vec3(16.,1.,1.)+ vec3(4.*float(i),0.,0.)));
		seed = seed << uvec4(0,8,16,24);
		v[i] = seed.x|seed.y|seed.z|seed.w;
	}
	uvec3 reso = gl_NumWorkGroups*gl_WorkGroupSize;
	b_density[gl_GlobalInvocationID.x + gl_GlobalInvocationID.y*reso.x + gl_GlobalInvocationID.z*reso.x*reso.y] = v;

}