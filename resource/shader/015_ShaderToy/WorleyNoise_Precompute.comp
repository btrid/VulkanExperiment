#version 460
#extension GL_GOOGLE_include_directive : require

#define USE_WORLEYNOISE 0
layout(set=USE_WORLEYNOISE, binding=0) uniform sampler3D s_worleynoise_map;
layout(set=USE_WORLEYNOISE, binding=10, r8ui) uniform uimage3D i_worleynoise_map;

layout(set=USE_WORLEYNOISE, binding=20, std430) restrict buffer WN_SeedBuffer {
	ivec3 b_seed[];
};
layout(set=USE_WORLEYNOISE, binding=21, std430) restrict buffer WN_TileCounter {
	uint b_tile_counter[];
};
layout(set=USE_WORLEYNOISE, binding=22, std430) restrict buffer WN_TileDataBuffer {
	uint b_tile_buffer[];
};
#define TILE_SIZE 32
#define radius  9.

layout (local_size_x = 1024) in;

void main()
{
	uint tile_index = gl_WorkGroupID.x + gl_WorkGroupID.y*gl_NumWorkGroups.x;
	vec2 bmin = vec2(gl_WorkGroupID.xy) * vec2(TILE_SIZE);
	vec2 bmax = bmin+vec2(TILE_SIZE);

	// タイルベースカリング
	for(uint i = 0; i < gl_LocalInvocationIndex; i+=gl_WorkGroupSize.x)
	{
		vec2 p = vec3(b_seed[i]).xy;
		vec2 delta = p-clamp(p, bmin, bmax);
		if(delta.x * delta.x + delta.y * delta.y < radius * radius)
		{
			// タイルと接触していたら確保
			uint tile_buffer_index = atomicAdd(b_tile_counter[tile_index], 1);
			b_tile_buffer[tile_buffer_index + tile_index*27] = i;
		}
	}	
}