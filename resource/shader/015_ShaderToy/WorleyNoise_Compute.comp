#version 460
#extension GL_GOOGLE_include_directive : require

#define USE_WORLEYNOISE 0
#include "WorleyNoise.glsl"

layout (local_size_x = 32, local_size_y = 32) in;

float remap(float value, float oldMin, float oldMax, float newMin, float newMax)
{
	 return newMin + (value - oldMin) / (oldMax - oldMin) * (newMax - newMin); 
}
void main()
{
	{
		vec4 v = vec4(0.);
		int level = 0;
		v[0] = remap(value_noise(gl_GlobalInvocationID.xyz+21, level), worley_noise(gl_GlobalInvocationID.xyz+ 5, level), 1., 0., 1.);
		v[1] = worley_noise(gl_GlobalInvocationID.xyz+ 14, level+1);
		v[2] = worley_noise(gl_GlobalInvocationID.xyz+ 11, level+2);
		v[3] = worley_noise(gl_GlobalInvocationID.xyz+ 73, level+3);

		v = clamp(v*vec4(20., 1., 1., 1.), vec4(0.), vec4(1.));
		imageStore(i_cloud_map, ivec3(gl_GlobalInvocationID), uvec4(v* vec4(255.)));
	}

	if(all(lessThan(gl_GlobalInvocationID, imageSize(i_cloud_detail_map))))
	{
		vec4 v = vec4(0.);
		v[0] = worley_noise(gl_GlobalInvocationID.xyz+ 53, 2);
		v[1] = worley_noise(gl_GlobalInvocationID.xyz+ 29, 3);
		v[2] = worley_noise(gl_GlobalInvocationID.xyz+ 12, 4);
		v = clamp(v, vec4(0.), vec4(1.));
		imageStore(i_cloud_detail_map, ivec3(gl_GlobalInvocationID), uvec4(v* vec4(255.)));

	}

}