#version 450
#extension GL_GOOGLE_include_directive : require

#define USE_GI2D 0
#define USE_GI2D_Radiosity 1
#include "GI2D.glsl"

layout (local_size_x = 1024, local_size_y = 1) in;
void main()
{
	if(gl_GlobalInvocationID.x >= b_segment_counter.w){ return; }


	D2Segment segment = b_segment[gl_GlobalInvocationID.x];
	if(segment.radiance == 0){ return; }

	vec3 f_radiance = unpackEmissive(segment.radiance);
	D2Ray ray = b_ray[segment.ray_index];
	vec2 dir = calcDir(ray.angle);

	{
		vec4 pos = fma(vec4(segment.begin.xx, segment.march.xx), dir.xyxy, ray.origin.xyxy);
		ivec4 map_index = ivec4(pos);
		ivec2 findex = map_index.xz + map_index.yw*u_gi2d_info.m_resolution.x;

		{
			vec3 radiance = f_radiance * getRGB(b_fragment[findex.x]) / 3.14;
			atomicAdd(b_light[getMemoryOrder(map_index.xy)], packEmissive(radiance));
		}
		{
			vec3 radiance = f_radiance * getRGB(b_fragment[findex.y]) / 3.14;
			atomicAdd(b_light[getMemoryOrder(map_index.zw)], packEmissive(radiance));
		}
		
	}
}
