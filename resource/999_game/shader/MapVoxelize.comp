#version 450

//#pragma optionNV (unroll none)
#pragma optionNV (inline all)
//#pragma optionNV(fastmath on)
//#pragma optionNV(strict on)

#extension GL_GOOGLE_cpp_style_line_directive : require

#include <btrlib/ConvertDimension.glsl>

#define SETPOINT_VOXEL 0
#include <btrlib/Voxelize/Voxelize.glsl>

#define SETPOINT_MAP 1
#define SETPOINT_SCENE 2
#include <Map.glsl>

layout (local_size_x = 128, local_size_y = 4, local_size_z = 1) in;

void main()
{
	uvec3 id = gl_GlobalInvocationID.xyz;
	if(any(greaterThan(id, u_voxel_info.u_cell_num.xyz))){
		return;
	}

	MapDescriptor map_desc = u_map_info.m_descriptor[1];
	vec3 pos = vec3(id*u_voxel_info.u_cell_size.xyz) + u_voxel_info.u_area_min.xyz;
	ivec3 index = calcMapIndex(map_desc, pos);
	uint map_height = imageLoad(t_map, ivec2(index.xz)).r;
	if(map_height < id.y){
		// 何もないはず
	}else{
		float power = calcEmission(pos);
		vec3 albedo = vec3(1., 0., 1.) * power;
		uint packd_albedo = uint(albedo.r*64)<<23 | uint(albedo.g*64)<<14 | uint(albedo.b*64)<<5 | 1;
		imageAtomicAdd(t_voxel_albedo, ivec3(id), packd_albedo);
	}


}